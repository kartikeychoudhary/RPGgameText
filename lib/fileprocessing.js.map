{"version":3,"sources":["../src/fileprocessing.js"],"names":["files","tresCoords","treasures","_onFilesSelected","processed_arr","results","result","add","coordinates","set","treasure","onChange","pFileReader","file","reader","FileReader","Promise","resolve","reject","onload","event","target","readyState","DONE","JSON","parse","readAsText","promise","arr_promises","i","length","push","all"],"mappings":";;;;;;;;qEAKO,iBAAwBA,KAAxB,EAA+BC,UAA/B,EAA2CC,SAA3C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEuBC,iBAAiBH,KAAjB,CAFvB;;AAAA;AAECI,yBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGiBA,aAHjB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGMC,mBAHN;;AAID,mCAAM,MAAN,EAAcA,OAAd;AAJC;AAAA;AAAA;AAAA;AAKD,8BAAmBA,OAAnB,2HAA4B;AAAnBC,oBAAmB;;AAC1BL,yBAAWM,GAAX,CAAeD,OAAOE,WAAtB;AACAN,wBAAUO,GAAV,CAAcH,OAAOE,WAArB,EAAkCF,OAAOI,QAAzC;AACD;AARA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWH,mCAAM,MAAN,EAAc,eAAd;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,Q;;;;;AALtB;;AACA;;AAEA;;;;AAiBA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,SAAS,IAAIC,UAAJ,EAAb;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,WAAOK,MAAP,GAAgB,UAASC,KAAT,EAAgB;AAC9B,UAAIA,MAAMC,MAAN,CAAaC,UAAb,IAA2BP,WAAWQ,IAA1C,EAAgD;AAC9CN,gBAAQO,KAAKC,KAAL,CAAWL,MAAMC,MAAN,CAAaf,MAAxB,CAAR;AACD;AACF,KAJD;;AAMA,QAAIO,IAAJ,EAAU;AACRC,aAAOY,UAAP,CAAkBb,IAAlB,EAAwB,OAAxB;AACD;AACF,GAVM,CAAP;AAWD;AACD,SAASV,gBAAT,CAA0BH,KAA1B,EAAiC;AAC/B,MAAI2B,UAAUX,QAAQC,OAAR,EAAd;AACA,MAAIW,eAAe,EAAnB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI7B,MAAM8B,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,QAAIhB,OAAOb,MAAM6B,CAAN,CAAX;AACAD,iBAAaG,IAAb,CAAkBnB,YAAYC,IAAZ,CAAlB;AACD;;AAED,SAAOG,QAAQgB,GAAR,CAAYJ,YAAZ,CAAP;AACA;AACA;AACD","file":"fileprocessing.js","sourcesContent":["import \"babel-core/register\";\nimport \"babel-polyfill\";\n\nimport { print } from \"./additional\";\n\nexport async function onChange(files, tresCoords, treasures) {\n  try {\n    var processed_arr = await _onFilesSelected(files);\n    for (var results of processed_arr) {\n      print(\"file\", results);\n      for (var result of results) {\n        tresCoords.add(result.coordinates);\n        treasures.set(result.coordinates, result.treasure);\n      }\n    }\n  } catch (error) {\n    print(\"file\", \"reading error\");\n  }\n}\n\nfunction pFileReader(file) {\n  var reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onload = function(event) {\n      if (event.target.readyState == FileReader.DONE) {\n        resolve(JSON.parse(event.target.result));\n      }\n    };\n\n    if (file) {\n      reader.readAsText(file, \"UTF-8\");\n    }\n  });\n}\nfunction _onFilesSelected(files) {\n  var promise = Promise.resolve();\n  var arr_promises = [];\n  for (var i = 0; i < files.length; i++) {\n    var file = files[i];\n    arr_promises.push(pFileReader(file));\n  }\n\n  return Promise.all(arr_promises);\n  // ? _fileInput.files.forEach(file => promise=promise.then(()=> pFileReader(file)));\n  // ? promise.then(()=> console.log(\"All Done\"));\n}\n"]}